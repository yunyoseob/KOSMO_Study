SELECT COUNT(*) FROM DEPT;
SELECT * FROM DEPT WHERE ROWNUM <= 3;
SELECT * FROM DEPT;

SELECT 
        A.DEPTNO AS DEPTNO  -- 부서 번호
       ,A.DNAME  AS DNAME   -- 부서 이름
       ,A.LOC    AS LOC     -- 지역 
FROM    DEPT A;



-- DESC : DESCRIBE : 테이블의 구조 확인 
-- 테이블 컬럼명,  NULL 여부, 데이터 타입 & 사이즈 
DESC DEPT;
DESC EMP;
DESC TAB;

-- DISTINCT : 중복 제거하는 키워드 
SELECT DEPTNO FROM EMP;
SELECT DISTINCT DEPTNO FROM EMP;

SELECT DEPTNO FROM EMP WHERE DEPTNO = 10;
SELECT COUNT(DEPTNO) FROM EMP WHERE DEPTNO = 10;
SELECT DEPTNO FROM EMP WHERE DEPTNO = 20;
SELECT COUNT(DEPTNO) FROM EMP WHERE DEPTNO = 20;
SELECT DEPTNO FROM EMP WHERE DEPTNO = 30;
SELECT COUNT(DEPTNO) FROM EMP WHERE DEPTNO = 30;

-- EMP 테이블에서 사원번호를 전체 조회 하시오 
DESC EMP;

SELECT EMPNO FROM EMP;

-- EMP 테이블에서 부서번호가 10번 부서의 사원번호를 조회 하시오
SELECT DEPTNO FROM EMP;
SELECT DEPTNO FROM EMP WHERE DEPTNO = 10;
SELECT EMPNO FROM EMP WHERE DEPTNO = 10;

SELECT * FROM EMP;

SELECT DISTINCT JOB FROM EMP;

DESC EMP;

SELECT * FROM EMP WHERE JOB = SALESMAN;
SELECT * FROM EMP WHERE JOB = "SALESMAN";
SELECT * FROM EMP WHERE JOB = 'SALESMAN';

-- 7521 SALSEMAN 이름은 ? 
SELECT ENAME FROM EMP WHERE JOB = 'SALESMAN' AND EMPNO = 7521;
SELECT ENAME FROM EMP WHERE JOB = 'SALESMAN' AND EMPNO = '7521';

-- 30 부서 사원번호가 7499인 사원의 직책 ? 
SELECT JOB FROM EMP WHERE DEPTNO = 30 AND EMPNO = 7499;
SELECT JOB FROM EMP WHERE DEPTNO = 30 AND EMPNO = '7499';

-- 스미스 사원의 사원번호, 직책, 입사일을 조회 하시오 
SELECT * FROM EMP WHERE ENAME = smith;
SELECT * FROM EMP WHERE ENAME = 'smith';
SELECT EMPNO, JOB, HIREDATE FROM EMP WHERE ENAME = UPPER('smith');
SELECT * FROM EMP WHERE ENAME = 'SMITH';
SELECT * FROM EMP WHERE ENAME = LOWER('SMITH');
SELECT EMPNO, JOB, TO_CHAR(HIREDATE, 'YYYY-MM-DD') FROM EMP WHERE ENAME = UPPER('smith');
SELECT EMPNO, JOB, TO_CHAR(HIREDATE, 'YYYY-MM-DD') AS HIREDATE FROM EMP WHERE ENAME = UPPER('smith');

-- 부서번호 20번 사원들의 입사일을 조회 하시오 입사일 형식은 YYYY.MM.DD
SELECT * FROM EMP WHERE DEPTNO = 20;
SELECT HIREDATE FROM EMP WHERE DEPTNO = 20;
SELECT TO_CHAR(HIREDATE, 'YYYY.MM.DD') FROM EMP WHERE DEPTNO = 20;

-- 오라클에서만 제공하는 DUMMY TABLE : DUAL 
DESC DUAL;

SELECT * FROM DUAL;
SELECT 1 FROM DUAL;
SELECT 1 + 2 FROM DUAL;

-- TO_DATE : 날짜 형식으로 바꾸는 함수
-- TO_CHAR : 날짜 형식을 바꾸는 함수 
SELECT TO_CHAR(TO_DATE('80/12/17'), 'YYYY.MM.DD') FROM DUAL;
-- SYSDATE 오늘 날짜를 추출하는 키워드 
SELECT SYSDATE FROM DUAL;
SELECT TO_CHAR(SYSDATE, 'YYYY.MM.DD') FROM DUAL;

SELECT UPPER('smith') FROM DUAL;
SELECT LOWER('SMITH') FROM DUAL;

SELECT 3 * 4 FROM DUAL;
SELECT 3 / 4 FROM DUAL;
SELECT 3 - 4 FROM DUAL;
SELECT 3 + 4 FROM DUAL;

--==================================
SELECT NULL FROM DUAL;
SELECT '' FROM DUAL;
SELECT ' ' FROM DUAL;

SELECT DUMP(NULL) FROM DUAL;
SELECT DUMP('') FROM DUAL;
SELECT DUMP(' ') FROM DUAL;
SELECT DUMP('  황 병 하 ') FROM DUAL;
--==================================

--  사원테이블에서 5건만 조회 하시오 
SELECT * FROM EMP;
SELECT * FROM EMP WHERE ROWNUM <= 5;

-- NULL 데이터 처리하기 
SELECT COMM FROM EMP;
SELECT COUNT(COMM) FROM EMP;

SELECT COUNT(NULL) FROM DUAL;
SELECT COUNT(0) FROM DUAL;

-- 오라클에서 NULL 데이터는 
-- IS NULL 또는 IS NOT NULL 로 비교해야 한다.
SELECT COMM FROM EMP WHERE COMM IS NULL;
SELECT COMM FROM EMP WHERE COMM IS NOT NULL;
-- 오라클에서 NULL 은 = 연산자로 비교하지 않는다.
SELECT COMM FROM EMP WHERE COMM = NULL;

-- NULL 있는 컬럼 카운드 함수 사용하기 
SELECT COUNT(COMM) FROM EMP WHERE COMM IS NOT NULL;


-- NULL 값을 처리하는 함수 
-- NVL() 함수 
SELECT NVL(NULL, 0) FROM DUAL;

-- EMP 테이블의 전체 건수는 ? 단 COMM 컬럼을 사용하세요
SELECT COMM FROM EMP WHERE COMM IS NULL;
SELECT COMM FROM EMP WHERE COMM IS NOT NULL;

SELECT NVL(COMM, 0) AS COMM FROM EMP;
SELECT COUNT(NVL(COMM, 0)) AS COMM FROM EMP;

-- LIKE 연산자 %(와일드 카드) 검색
-- 사원테이블에서 사원이름이 S로 시작하는 사원을 검색하시오 
SELECT * FROM EMP WHERE ENAME LIKE 'S%';
-- 사원테이블에서 사원이름이 S로 끝나는 사원을 검색하시오 
SELECT * FROM EMP WHERE ENAME LIKE '%S';
-- 사원테이블에서 사원이름에 S가 포함되어있는 사원을 검색하시오 
SELECT * FROM EMP WHERE ENAME LIKE '%S%';

-- 사원테이블에서 사원번호가 7 로 시작하는 사원들을 검색하시오 
SELECT ENAME, EMPNO FROM EMP WHERE EMPNO LIKE '7%';

-- 사원테이블에서 사원번호가 9 로 끝나는 사원들을 검색하시오 
SELECT * FROM EMP WHERE EMPNO LIKE '%9';

SELECT * FROM EMP WHERE ENAME LIKE 's%';
SELECT * FROM EMP WHERE ENAME LIKE UPPER('s%');

-- LIKE 연산자와 _(와일드카드) 검색, 조회
SELECT * FROM EMP;
-- 두 번째 문자가 A
SELECT * FROM EMP WHERE ENAME LIKE '_A%';
-- 세 번째 문자가 A
SELECT * FROM EMP WHERE ENAME LIKE '__A%';
-- 중간에 A가 포함되지않은 
SELECT * FROM EMP WHERE ENAME NOT LIKE '%A%';

-- 날짜 데이터 조회
-- 1981년 1월 1일 이전에 입사한 사원을 출력하시오 
SELECT HIREDATE FROM EMP;

SELECT * FROM EMP WHERE HIREDATE <= '81/01/01';
SELECT * FROM EMP WHERE HIREDATE <= '1981/01/01';
SELECT * FROM EMP WHERE HIREDATE <= '1981-01-01';
SELECT * FROM EMP WHERE HIREDATE <= '1981.01.01';
SELECT * FROM EMP WHERE HIREDATE <= '81/1/1';

--######################################################
SELECT * FROM EMP 
WHERE TO_CHAR(HIREDATE, 'YYYY-MM-DD') 
        <= TO_CHAR(TO_DATE('81/01/01'), 'YYYY-MM-DD');
--######################################################

/*
SELECT TO_CHAR(첫번째 변수, 두번째 변수) FROM DUAL;
첫번째 변수는 항상 DATE 타입이어야 한다.
두번째 변수는 날짜 형식이여야 한다.
*/
SELECT TO_CHAR(HIREDATE, 'YYYY-MM-DD') FROM EMP;
SELECT TO_CHAR(TO_DATE(HIREDATE), 'YYYY-MM-DD') FROM EMP;
SELECT TO_CHAR('81/01/01', 'YYYY-MM-DD') FROM DUAL;
SELECT TO_CHAR(TO_DATE('81/01/01'), 'YYYY-MM-DD') FROM DUAL;


